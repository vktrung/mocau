# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create .env file
        run: |
          echo "DB_CONN=${{ secrets.DB_CONN }}" > .env
          echo "SECRET=${{ secrets.SECRET }}" >> .env
          echo "SWAGGER_HOST=${{ secrets.SWAGGER_HOST }}" >> .env
          echo "GIN_MODE=release" >> .env
          echo "PORT=3000" >> .env
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull base images
        run: |
          docker pull golang:1.23-alpine || echo "Failed to pull golang:1.23-alpine"
          docker pull alpine:latest || echo "Failed to pull alpine:latest"
      - name: Build docker image
        run: |
          for i in {1..3}; do
            timeout 600 docker build --network=default --build-arg HTTP_PROXY= --build-arg HTTPS_PROXY= -t vktrung/go . && break
            echo "Attempt $i failed, retrying..."
            sleep 15
          done
      - name: Push image to docker hub
        run: docker push vktrung/go:latest
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull docker image
        run: docker pull vktrung/go:latest
      - name: Delete old containers
        run: |
          docker rm -f go-container || true
      - name: Run application container
        run: |
          docker run -d \
            --name go-container \
            --network host \
            -e "DB_CONN=${{ secrets.DB_CONN }}" \
            -e "SECRET=${{ secrets.SECRET }}" \
            -e "SWAGGER_HOST=${{ secrets.SWAGGER_HOST }}" \
            -e "GIN_MODE=release" \
            -e "PORT=3000" \
            -p 3000:3000 \
            vktrung/go
